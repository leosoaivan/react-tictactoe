{"version":3,"sources":["components/atoms/Square/index.js","components/atoms/Modal/index.js","components/compounds/GameOverModal/index.js","components/atoms/Form/index.js","components/compounds/PlayerFormModal/index.js","components/atoms/PlayerName/index.js","types/PlayerPropType.js","components/compounds/NameDisplay/index.js","components/game.js","index.js"],"names":["Root","styled","div","_templateObject","Square","_ref","onClick","value","react_default","a","createElement","defaultProps","rootDisplay","true","false","buttonDisplay","Modal_templateObject","props","displayModal","ModalContainer","section","_templateObject2","ModalHeader","_templateObject3","ModalBody","_templateObject4","CloseButton","button","_templateObject5","displayButton","Modal","modalHeader","modalBody","onCloseModal","Modal_Root","GameOverModal","currentPlayerName","gameResult","modalHeaderMessage","modalBodyMessage","concat","atoms_Modal","undefined","form","Form_templateObject","InputContainer","Form_templateObject2","InputDom","input","Form_templateObject3","Form_templateObject4","Form","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","name","handleSubmit","preventDefault","_this$state","state","playerOneName","playerTwoName","onNameSubmit","_this$state2","Form_Root","onSubmit","type","onChange","placeholder","required","Form_CloseButton","Component","PlayerFormModal","handleNameSubmit","onSetPlayerNames","formDom","atoms_Form","PlayerName_templateObject","PlayerName","className","symbol","displayedName","PlayerName_Root","PropTypes","shape","string","NameDisplay_templateObject","PlayerOne","NameDisplay_templateObject2","PlayerTwo","NameDisplay_templateObject3","Versus","NameDisplay_templateObject4","NameDisplay","playerOne","playerTwo","NameDisplay_Root","game_templateObject","SquareList","game_templateObject2","Game","currentPlayer","moveCounter","closeModal","gameBoard","Array","fill","displayGameModal","handleSetPlayerNames","handleClick","index","storePlayerMove","checkGameOver","advanceTurn","restartGame","gameIsOver","forEach","condition","_condition","slicedToArray","b","c","values","every","includes","displayFormModal","_this2","_this$state3","squares","map","key","atoms_Square","game_Root","compounds_NameDisplay","compounds_PlayerFormModal","compounds_GameOverModal","ReactDOM","render","game","document","querySelector"],"mappings":"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","file":"static/js/main.2a2a7952.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Root = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  background: white;\n`;\n\nconst Square = ({ onClick, value }) => (\n  <Root onClick={onClick}>\n    {value}\n  </Root>\n);\n\nSquare.propTypes = {\n  onClick: PropTypes.func,\n  value: PropTypes.string,\n};\n\nSquare.defaultProps = {\n  onClick: null,\n  value: null,\n};\n\nexport default Square;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst rootDisplay = {\n  true: 'block',\n  false: 'none',\n};\n\nconst buttonDisplay = {\n  true: 'block',\n  false: 'none',\n};\n\nconst Root = styled.div`\n  display: ${props => rootDisplay[props.displayModal]};\n  position: fixed;\n  top: 0;\n  left: 0;\n  width:100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.6);\n`;\n\nconst ModalContainer = styled.section`\n  position: fixed;\n  background: white;\n  width: 50%;\n  height: 50%;\n  top:40%;\n  left:50%;\n  transform: translate(-50%,-50%);\n  padding: 5%;\n  text-align: center;\n`;\n\nconst ModalHeader = styled.div`\n  font-size: 5vw;\n  text-align: center\n  margin: 48px 0px;\n`;\n\nconst ModalBody = styled.div`\n  margin: auto;\n  text-align: center;\n`;\n\nconst CloseButton = styled.button`\n  display: ${props => buttonDisplay[props.displayButton]};\n  margin: 20px auto auto auto;\n  height: 40px;\n  width: 50%;\n  background-color: green;\n  color: white;\n  font-weight: 600;\n  font-size: 20px;\n  border: none;\n  border-radius: 2px;\n\n  &:hover {\n    background-color: darkseagreen;\n  }\n`;\n\nconst Modal = ({\n  displayButton,\n  displayModal,\n  modalHeader,\n  modalBody,\n  onCloseModal,\n}) => {\n  const buttonText = 'Try again, you\\'ll feel better';\n\n  return (\n    <Root displayModal={displayModal}>\n      <ModalContainer>\n        <ModalHeader>\n          {modalHeader}\n        </ModalHeader>\n        <ModalBody>\n          {modalBody}\n        </ModalBody>\n        <CloseButton\n          displayButton={displayButton}\n          onClick={onCloseModal}\n        >\n          {buttonText}\n        </CloseButton>\n      </ModalContainer>\n    </Root>\n  );\n};\n\nModal.propTypes = {\n  displayButton: PropTypes.bool,\n  displayModal: PropTypes.bool,\n  modalHeader: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  modalBody: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  onCloseModal: PropTypes.func,\n};\n\nModal.defaultProps = {\n  displayButton: false,\n  displayModal: false,\n  modalHeader: null,\n  modalBody: null,\n  onCloseModal: null,\n};\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../../atoms/Modal';\n\nconst GameOverModal = ({\n  currentPlayerName,\n  displayModal,\n  gameResult,\n  onClick,\n}) => {\n  let modalHeaderMessage = '';\n  let modalBodyMessage = '';\n\n  if (gameResult === 'win') {\n    modalHeaderMessage = 'Congratulations';\n    modalBodyMessage = `With strategy, cunning, and ruthelessness, ${currentPlayerName} has claimed absolute victory.`;\n  } else {\n    modalHeaderMessage = 'What a tired game';\n    modalBodyMessage = 'Unfortunate. Sad. Demeaning to watch...a game where neither player is smart enough to outdo the other.';\n  }\n\n  return (\n    <Modal\n      displayModal={displayModal}\n      modalHeader={modalHeaderMessage}\n      modalBody={modalBodyMessage}\n      onCloseModal={onClick}\n      displayButton\n    />\n  );\n};\n\nGameOverModal.propTypes = {\n  currentPlayerName: PropTypes.string,\n  onClick: PropTypes.func,\n  displayModal: PropTypes.bool,\n  gameResult: PropTypes.string,\n};\n\nGameOverModal.defaultProps = {\n  currentPlayerName: '',\n  displayModal: false,\n  gameResult: undefined,\n  onClick: undefined,\n};\n\nexport default GameOverModal;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Root = styled.form`\n  width: 100%;\n`;\n\nconst InputContainer = styled.div`\n  width: 100%;\n  margin: 10px 0 40px 0;\n  text-align: center;\n`;\n\nconst InputDom = styled.input`\n  width: 50%;\n  margin: auto;\n`;\n\nconst CloseButton = styled.button`\n  margin: auto;\n  height: 40px;\n  width: 50%;\n  background-color: green;\n  color: white;\n  font-weight: 600;\n  font-size: 20px;\n  border: none;\n  border-radius: 2px;\n\n  &:hover {\n    background-color: darkseagreen;\n  }\n`;\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playerOneName: '',\n      playerTwoName: '',\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { playerOneName, playerTwoName } = this.state;\n    const { onNameSubmit } = this.props;\n\n    onNameSubmit(playerOneName, playerTwoName);\n  };\n\n  render() {\n    const {\n      playerOneName,\n      playerTwoName,\n    } = this.state;\n\n    const labelOne = 'What\\'s your name Player One?';\n    const labelTwo = 'And yours, Player Two?';\n\n    return (\n      <Root onSubmit={this.handleSubmit}>\n        <InputContainer>\n          {labelOne}\n          <br />\n          <InputDom\n            type=\"text\"\n            name=\"playerOneName\"\n            value={playerOneName}\n            onChange={this.handleChange}\n            placeholder=\"Player One\"\n            required\n          />\n        </InputContainer>\n        <InputContainer>\n          {labelTwo}\n          <br />\n          <InputDom\n            type=\"text\"\n            name=\"playerTwoName\"\n            value={playerTwoName}\n            onChange={this.handleChange}\n            placeholder=\"Player Two\"\n            required\n          />\n        </InputContainer>\n        <CloseButton type=\"submit\">\n          Submit\n        </CloseButton>\n      </Root>\n    );\n  }\n}\n\nForm.propTypes = {\n  onNameSubmit: PropTypes.func,\n};\n\nForm.defaultProps = {\n  onNameSubmit: null,\n};\n\nexport default Form;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../../atoms/Modal';\nimport Form from '../../atoms/Form';\n\nclass PlayerFormModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displayModal: true,\n    };\n  }\n\n  handleNameSubmit = (playerOneName, playerTwoName) => {\n    const { onSetPlayerNames } = this.props;\n\n    this.setState({\n      displayModal: false,\n    },\n    onSetPlayerNames(playerOneName, playerTwoName));\n  }\n\n  render() {\n    const {\n      displayModal,\n    } = this.state;\n    const headerMessage = 'Let\\'s FCKN do THIS!';\n    const formDom = (\n      <Form\n        onNameSubmit={this.handleNameSubmit}\n      />\n    );\n\n    return (\n      <Modal\n        displayModal={displayModal}\n        modalHeader={headerMessage}\n        modalBody={formDom}\n      />\n    );\n  }\n}\n\nPlayerFormModal.propTypes = {\n  onSetPlayerNames: PropTypes.func,\n};\n\nPlayerFormModal.defaultProps = {\n  onSetPlayerNames: undefined,\n};\n\nexport default PlayerFormModal;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Root = styled.div`\n  box-sizing: border-box;\n  font-size: 3em;\n  font-family: 'Montserrat', sans serif;\n  font-weight: 600;\n  margin-left: 0.5em;\n  margin-right: 0.5em;\n  min-width: 0;\n  max-width: calc(100% - 0.5em);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: no-wrap;\n`;\n\nconst PlayerName = ({ className, name, symbol }) => {\n  const displayedName = (name ? `${name} (${symbol})` : `(${symbol})`);\n\n  return (\n    <Root className={className}>\n      {displayedName}\n    </Root>\n  );\n};\n\nPlayerName.propTypes = {\n  className: PropTypes.string,\n  name: PropTypes.string,\n  symbol: PropTypes.string,\n};\n\nPlayerName.defaultProps = {\n  className: null,\n  name: '',\n  symbol: '',\n};\n\nexport default PlayerName;\n","import PropTypes from 'prop-types';\n\nconst PlayerPropType = PropTypes.shape({\n  name: PropTypes.string,\n  symbol: PropTypes.string,\n});\n\nexport default PlayerPropType;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PlayerName from '../../atoms/PlayerName';\nimport PlayerPropType from '../../../types/PlayerPropType';\n\nconst Root = styled.div`\n  box-sizing: border-box;\n  display: grid;\n  grid-template-columns: 1fr 100px 1fr;\n`;\n\nconst PlayerOne = styled(PlayerName)`\n  grid-column-start: 1;\n  grid-column-end: 2;\n  justify-self: end;\n  align-self: end;\n`;\n\nconst PlayerTwo = styled(PlayerName)`\n  grid-column-start: 3;\n  grid-column-end: 4;\n  justify-self: start;\n  align-self: end;\n`;\n\nconst Versus = styled.div`\n  font-size: 1.5em;\n  color: CornflowerBlue;\n  grid-column-start: 2;\n  grid-column-end: 3;\n  justify-self: center;\n  align-self: end;\n  padding-bottom: 5px;\n`;\n\nconst NameDisplay = ({ playerOne, playerTwo }) => (\n  <Root>\n    <PlayerOne\n      name={playerOne.name}\n      symbol={playerOne.symbol}\n    />\n    <Versus>\n      versus\n    </Versus>\n    <PlayerTwo\n      name={playerTwo.name}\n      symbol={playerTwo.symbol}\n    />\n  </Root>\n);\n\nNameDisplay.propTypes = {\n  playerOne: PlayerPropType,\n  playerTwo: PlayerPropType,\n};\n\nNameDisplay.defaultProps = {\n  playerOne: {},\n  playerTwo: {},\n};\n\nexport default NameDisplay;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Square from './atoms/Square';\nimport GameOverModal from './compounds/GameOverModal';\nimport PlayerFormModal from './compounds/PlayerFormModal';\nimport NameDisplay from './compounds/NameDisplay';\n\nconst Root = styled.div`\n  font-family: 'Montserrat', sans serif;\n`;\n\nconst SquareList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: repeat(3, 1fr);\n  grid-gap: 5px 5px;\n  height: 460px;\n  width: 460px;\n  margin: 100px auto auto auto;\n  background: black;\n}\n`;\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playerOne: {\n        name: null,\n        symbol: 'X',\n      },\n      playerTwo: {\n        name: null,\n        symbol: 'O',\n      },\n      gameBoard: Array(9).fill(''),\n      moveCounter: 1,\n      displayFormModal: false,\n      displayGameModal: false,\n      gameResult: '',\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ displayFormModal: true });\n  }\n\n  currentPlayer = () => {\n    const {\n      moveCounter, playerOne, playerTwo,\n    } = this.state;\n\n    return (moveCounter % 2 === 0 ? playerTwo : playerOne);\n  };\n\n  closeModal = () => {\n    this.setState(\n      {\n        gameBoard: Array(9).fill(''),\n        moveCounter: 1,\n        displayGameModal: false,\n        gameResult: '',\n      },\n    );\n  }\n\n  handleSetPlayerNames = (playerOneName, playerTwoName) => {\n    this.setState({\n      playerOne: {\n        name: playerOneName,\n        symbol: 'X',\n      },\n      playerTwo: {\n        name: playerTwoName,\n        symbol: 'O',\n      },\n    });\n  };\n\n  handleClick = (index) => {\n    this.storePlayerMove(index);\n    this.checkGameOver();\n  }\n\n  storePlayerMove = (index) => {\n    const { gameBoard } = this.state;\n    gameBoard[index] = this.currentPlayer().symbol;\n\n    this.setState({\n      gameBoard,\n    });\n  }\n\n  advanceTurn = () => {\n    const { moveCounter } = this.state;\n\n    this.setState({ moveCounter: moveCounter + 1 });\n  }\n\n  restartGame = () => {\n    this.setState(\n      {\n        playerOne: {},\n        playerTwo: {},\n        gameBoard: Array(9).fill(''),\n        moveCounter: 1,\n      },\n    );\n  }\n\n  checkGameOver = () => {\n    const {\n      moveCounter,\n      gameBoard,\n    } = this.state;\n\n    let gameIsOver = false;\n\n    const winConditions = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n\n    if (moveCounter >= 5) {\n      winConditions.forEach((condition) => {\n        const [a, b, c] = condition;\n        const values = [gameBoard[a], gameBoard[b], gameBoard[c]];\n\n        if (gameBoard[a] !== '' && values.every(value => value === gameBoard[a])) {\n          gameIsOver = true;\n\n          this.setState(\n            {\n              gameResult: 'win',\n              displayGameModal: true,\n            },\n          );\n        }\n\n        if (!gameBoard.includes('') && !gameIsOver) {\n          gameIsOver = true;\n\n          this.setState(\n            {\n              displayGameModal: true,\n              gameResult: 'tie',\n            },\n          );\n        }\n      });\n    }\n\n    if (!gameIsOver) {\n      this.advanceTurn();\n    }\n  };\n\n  render() {\n    const {\n      displayFormModal,\n      displayGameModal,\n      gameBoard,\n      gameResult,\n      playerOne,\n      playerTwo,\n    } = this.state;\n\n    const squares = gameBoard.map((value, index) => {\n      const key = `square_${index}`;\n\n      return (\n        <Square\n          key={key}\n          onClick={() => this.handleClick(index)}\n          value={value}\n        />\n      );\n    });\n\n    return (\n      <Root>\n        <NameDisplay\n          playerOne={playerOne}\n          playerTwo={playerTwo}\n        />\n        <SquareList>\n          {squares}\n        </SquareList>\n        <PlayerFormModal\n          displayModal={displayFormModal}\n          onSetPlayerNames={this.handleSetPlayerNames}\n        />\n        <GameOverModal\n          currentPlayerName={this.currentPlayer().name}\n          displayModal={displayGameModal}\n          gameResult={gameResult}\n          onClick={this.closeModal}\n          displayButton\n        />\n      </Root>\n    );\n  }\n}\n\nexport default Game;\n","import React, { } from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './components/game';\n\nconst App = () => (\n  <Game />\n);\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}